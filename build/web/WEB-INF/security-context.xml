<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-5.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-5.0.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
">
    
    <!--<http pattern="/*" security="none"/>-->
    
    <http name="admin" pattern="/admin/**" auto-config="true" >
        <intercept-url pattern="/admin/login" access="isAnonymous()"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/admin/dashboard" access="hasRole('ROLE_ADMIN')"/>
        <form-login login-page="/admin/login"
                    authentication-success-handler-ref="adminSuccessTargetUrl"
                    login-processing-url="/admin/login"
                    authentication-failure-url="/admin/login?error=true"/>
        <logout 
            logout-url="/admin/logout"
            logout-success-url="/admin/login"
            invalidate-session="true"
            delete-cookies="JSESSIONID"/>
        <access-denied-handler error-page="/admin/login" />
    </http>
    
    <http name="manager" pattern="/mg/**" auto-config="true">
        <intercept-url pattern="/admin/login" access="isAnonymous()"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_MANAGER')"/>
<!--        <intercept-url pattern="/admin/dashboard" access="hasRole('ROLE_ADMIN')"/>-->
        <form-login login-page="/admin/login"
                    authentication-success-handler-ref="adminSuccessTargetUrl"
                    login-processing-url="/admin/login"
                    authentication-failure-url="/admin/login?error=true"/>
        <logout 
            logout-url="/admin/logout"
            logout-success-url="/admin/login"
            invalidate-session="true"
            delete-cookies="JSESSIONID"/>
        <access-denied-handler error-page="/admin/login" />
    </http>
    
    <http auto-config="true" entry-point-ref="ajaxAwareAuth">
<!--        <intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->
        <intercept-url pattern="/login" access="isAnonymous()"/>
        <intercept-url pattern="/register" access="permitAll"/>
        <intercept-url pattern="/rpservice" access="permitAll"/>
        <intercept-url pattern="/home" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/user/**" access="hasRole('ROLE_USER')"/>
        <!--<intercept-url pattern="/" access="permitAll"/>-->
        <form-login login-page="/"
                    default-target-url="/"
                    login-processing-url="/login"
                    authentication-failure-url="/?error=true"/>
        <!--always-use-default-target="true"-->
        <logout 
            logout-url="/user/logout"
            logout-success-url="/"
            invalidate-session="true"
            delete-cookies="true"/>
        <access-denied-handler error-page="/" />
    </http>
    
<!--    <http-firewall ref="httpFirewall"/>
    
    <beans:bean id="httpFirewall"
      class="org.springframework.security.web.firewall.StrictHttpFirewall"
      p:allowSemicolon="true"
      p:allowUrlEncodedSlash="true"/>-->

<!-- Set ref to userDetailsService -->
<!--	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
  		<beans:property name="userDetailsService" ref="userDetailsService"/>
	</beans:bean>

	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
  		<beans:property name="providers">
    		<beans:list>
      			<beans:ref local="daoAuthenticationProvider" />
    		</beans:list>
  		</beans:property>
	</beans:bean>	-->
    
    <authentication-manager>
        <authentication-provider user-service-ref="customerUDS">
            <password-encoder ref="passencoder"></password-encoder>
        </authentication-provider>
        <authentication-provider user-service-ref="AdminUDS">
            <password-encoder ref="passencoder"></password-encoder>
        </authentication-provider>
<!--        <authentication-provider>
            <user-service>
                <user name="umar" password="{noop}secret" authorities="ROLE_ADMIN" />
            </user-service>
        </authentication-provider>-->
    </authentication-manager>
    
    <beans:bean id="customerUDS" class="security.CustomerUDS"/>
    
    <beans:bean id="AdminUDS" class="security.AdminUDS"/>
    
    <beans:bean id="passencoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
    <!--authentication-success-handler-ref="authSuccessHandler"-->
    <beans:bean id="adminSuccessTargetUrl" class="security.AdminAuthenticationSuccessHandler"/>
    
    <beans:bean id="ajaxAwareAuth" class="security.AjaxAwareAuthEntryPoint">
        <beans:constructor-arg name="loginFormUrl" value="/"/>
        <!--<beans:property name="loginFormUrl" value="/login" />-->
    </beans:bean>

</beans:beans>
